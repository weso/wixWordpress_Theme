<?php return function ($in, $debugopt = 1) {
    $cx = Array(
        'flags' => Array(
            'jstrue' => false,
            'jsobj' => false,
            'spvar' => false,
            'prop' => false,
            'method' => false,
            'mustlok' => false,
            'mustsec' => false,
            'debug' => $debugopt,
        ),
        'helpers' => Array(),
        'blockhelpers' => Array(),
        'hbhelpers' => Array(),
        'partials' => Array(),
        'scopes' => Array($in),
        'sp_vars' => Array(),
'funcs' => Array(
    'sec' => function ($cx, $v, $in, $each, $cb, $inv = null) {
        $isary = is_array($v);
        $loop = $each;
        $keys = null;
        $last = null;
        $is_obj = false;

        if ($isary && $inv !== null && count($v) === 0) {
            return $inv($cx, $in);
        }
        if (!$loop && $isary) {
            $keys = array_keys($v);
            $loop = (count(array_diff_key($v, array_keys($keys))) == 0);
            $is_obj = !$loop;
        }
        if ($loop && $isary) {
            if ($each) {
                if ($keys == null) {
                    $keys = array_keys($v);
                    $is_obj = (count(array_diff_key($v, array_keys($keys))) > 0);
                }
            }
            $ret = Array();
            $cx['scopes'][] = $in;
            $i = 0;
            if ($cx['flags']['spvar']) {
                $last = count($keys) - 1;
            }
            foreach ($v as $index => $raw) {
                if ($cx['flags']['spvar']) {
                    $cx['sp_vars']['first'] = ($i === 0);
                    if ($is_obj) {
                        $cx['sp_vars']['key'] = $index;
                        $cx['sp_vars']['index'] = $i;
                    } else {
                        $cx['sp_vars']['last'] = ($i == $last);
                        $cx['sp_vars']['index'] = $index;
                    }
                $i++;
                }
                $ret[] = $cb($cx, $raw);
            }
            if ($cx['flags']['spvar']) {
                if ($is_obj) {
                    unset($cx['sp_vars']['key']);
                } else {
                    unset($cx['sp_vars']['last']);
                }
                unset($cx['sp_vars']['index']);
                unset($cx['sp_vars']['first']);
            }
            array_pop($cx['scopes']);
            return join('', $ret);
        }
        if ($each) {
            if ($inv !== null) {
                $cx['scopes'][] = $in;
                $ret = $inv($cx, $v);
                array_pop($cx['scopes']);
                return $ret;
            }
            return '';
        }
        if ($isary) {
            if ($cx['flags']['mustsec']) {
                $cx['scopes'][] = $v;
            }
            $ret = $cb($cx, $v);
            if ($cx['flags']['mustsec']) {
                array_pop($cx['scopes']);
            }
            return $ret;
        }

        if ($v === true) {
            return $cb($cx, $in);
        } 

        if (!is_null($v) && ($v !== false)) {
            return $cb($cx, $v);
        }

        if ($inv !== null) {
            return $inv($cx, $in);
        }

        return '';
    },
)

    );
    return '<main class=content>
  <div class=container>
    <h1>'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_title']) && is_array($in)) ? $in['contact_title'] : null), ENT_QUOTES, 'UTF-8').'';}).'</h1>
    <div class=half>
      <div class=box>'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_for_general_info']) && is_array($in)) ? $in['contact_for_general_info'] : null), ENT_QUOTES, 'UTF-8').'';}).' <a href=mailto:'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_for_general_info_email']) && is_array($in)) ? $in['contact_for_general_info_email'] : null), ENT_QUOTES, 'UTF-8').'';}).'>'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_for_general_info_email']) && is_array($in)) ? $in['contact_for_general_info_email'] : null), ENT_QUOTES, 'UTF-8').'';}).'</a>
      </div>
      <div class=box>'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_for_media_requests']) && is_array($in)) ? $in['contact_for_media_requests'] : null), ENT_QUOTES, 'UTF-8').'';}).' <a href=mailto:'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_for_media_requests_email']) && is_array($in)) ? $in['contact_for_media_requests_email'] : null), ENT_QUOTES, 'UTF-8').'';}).'>'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_for_media_requests_email']) && is_array($in)) ? $in['contact_for_media_requests_email'] : null), ENT_QUOTES, 'UTF-8').'';}).'</a> '.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_or_call']) && is_array($in)) ? $in['contact_or_call'] : null), ENT_QUOTES, 'UTF-8').'';}).' <a href=tel:+442071938042>+44 207 193 8042</a>
      </div>
      <div class="line-behind-text follow-title">
        <h2>'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_follow_us']) && is_array($in)) ? $in['contact_follow_us'] : null), ENT_QUOTES, 'UTF-8').'';}).'</h2>
      </div>
      <div class=box-follow>
        <a href=#rss><i class="fa fa-rss fa-3x"></i> <br> '.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_rss']) && is_array($in)) ? $in['contact_rss'] : null), ENT_QUOTES, 'UTF-8').'';}).'</a>
        <a href=https://twitter.com/webfoundation><i class="fa fa-twitter fa-3x"></i> <br> '.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_twitter']) && is_array($in)) ? $in['contact_twitter'] : null), ENT_QUOTES, 'UTF-8').'';}).'</a>
        <a href=https://www.facebook.com/webfoundation><i class="fa fa-facebook fa-3x"></i> <br> '.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_facebook']) && is_array($in)) ? $in['contact_facebook'] : null), ENT_QUOTES, 'UTF-8').'';}).'</a>
      </div>
    </div>
    <div class=half>
      <h2>'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_feedback']) && is_array($in)) ? $in['contact_feedback'] : null), ENT_QUOTES, 'UTF-8').'';}).'</h2>
      <form action="'.htmlentities((string)((isset($in['path']) && is_array($in)) ? $in['path'] : null), ENT_QUOTES, 'UTF-8').'/inc/mail/mail.php" autocomplete=on class=feedback>
        <label for=name>'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_name']) && is_array($in)) ? $in['contact_form_name'] : null), ENT_QUOTES, 'UTF-8').'';}).'</label>
        <input name=name required>
        <label for=email>'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_email']) && is_array($in)) ? $in['contact_form_email'] : null), ENT_QUOTES, 'UTF-8').'';}).'</label>
        <input type=email name=email required>
        <label for=type>'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment_type']) && is_array($in)) ? $in['contact_form_comment_type'] : null), ENT_QUOTES, 'UTF-8').'';}).'</label>
        <select name=type required>
          <option value="'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment_type_indicators']) && is_array($in)) ? $in['contact_form_comment_type_indicators'] : null), ENT_QUOTES, 'UTF-8').'';}).'">'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment_type_indicators']) && is_array($in)) ? $in['contact_form_comment_type_indicators'] : null), ENT_QUOTES, 'UTF-8').'';}).'</option>
          <option value="'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment_type_methodology']) && is_array($in)) ? $in['contact_form_comment_type_methodology'] : null), ENT_QUOTES, 'UTF-8').'';}).'">'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment_type_methodology']) && is_array($in)) ? $in['contact_form_comment_type_methodology'] : null), ENT_QUOTES, 'UTF-8').'';}).'</option>
          <option value="'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment_type_countries']) && is_array($in)) ? $in['contact_form_comment_type_countries'] : null), ENT_QUOTES, 'UTF-8').'';}).'">'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment_type_countries']) && is_array($in)) ? $in['contact_form_comment_type_countries'] : null), ENT_QUOTES, 'UTF-8').'';}).'</option>
          <option value="'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment_type_visualisation']) && is_array($in)) ? $in['contact_form_comment_type_visualisation'] : null), ENT_QUOTES, 'UTF-8').'';}).'">'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment_type_visualisation']) && is_array($in)) ? $in['contact_form_comment_type_visualisation'] : null), ENT_QUOTES, 'UTF-8').'';}).'</option>
          <option value="'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment_type_other']) && is_array($in)) ? $in['contact_form_comment_type_other'] : null), ENT_QUOTES, 'UTF-8').'';}).'">'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment_type_other']) && is_array($in)) ? $in['contact_form_comment_type_other'] : null), ENT_QUOTES, 'UTF-8').'';}).'</option>
          <option value="'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment_type_new']) && is_array($in)) ? $in['contact_form_comment_type_new'] : null), ENT_QUOTES, 'UTF-8').'';}).'">'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment_type_new']) && is_array($in)) ? $in['contact_form_comment_type_new'] : null), ENT_QUOTES, 'UTF-8').'';}).'</option>
        </select>
        <label for=comment>'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_comment']) && is_array($in)) ? $in['contact_form_comment'] : null), ENT_QUOTES, 'UTF-8').'';}).'</label>
        <textarea name=comment cols=40 rows=10 required></textarea>
        <input type=submit value="'.$cx['funcs']['sec']($cx, ((isset($in['labels']) && is_array($in)) ? $in['labels'] : null), $in, false, function($cx, $in) {return ''.htmlentities((string)((isset($in['contact_form_send']) && is_array($in)) ? $in['contact_form_send'] : null), ENT_QUOTES, 'UTF-8').'';}).'">
      </form>
    </div>
  </div>
</main>
';
}
?>